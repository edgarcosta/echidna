//////////////////////////////////////////////////////////////////////////////
//                                                                          // 
//         Copyright (C) 2008 David Kohel <kohel@iml.univ-mrs.fr>           //
//                                                                          //
//  Distributed under the terms of the GNU General Public License (GPL)     //
//                                                                          //
//                  http://www.gnu.org/licenses/                            //
//                                                                          //
//        All rights granted to distribute under the GPL, version 2,        //
//          or (at your option) any later version of the license.           //
//                                                                          //
//////////////////////////////////////////////////////////////////////////////

function Level2ThetaNullHumbertPolynomials08(R)
    P<a00,a02,a20,a22> := PolynomialRing(R, 4);
    return {@
	2*a00*a02 - a20^2 - a22^2,
	2*a00*a02 + a20^2 + a22^2,
	a00^2 + a02^2 - 2*a20*a22,
	a00^2 + a02^2 + 2*a20*a22,
	4*a00^2*a20^2 + a02^4 - 2*a02^2*a22^2 + a22^4,
	a00^4 - 2*a00^2*a20^2 + 4*a02^2*a22^2 + a20^4,
	2*a00*a20 - a02^2 - a22^2,
	2*a00*a20 + a02^2 + a22^2,
	a00^2 - 2*a02*a22 + a20^2,
	a00^2 + 2*a02*a22 + a20^2,
	a00^2 - 2*a00*a02 - 2*a00*a20 - 2*a00*a22 + a02^2 - 2*a02*a20 - 2*a02*a22 + a20^2 - 2*a20*a22 + a22^2,
	a00^2 - 2*a00*a02 + 2*a00*a20 + 2*a00*a22 + a02^2 + 2*a02*a20 + 2*a02*a22 + a20^2 - 2*a20*a22 + a22^2,
	a00^2 + 2*a00*a02 - 2*a00*a20 + 2*a00*a22 + a02^2 + 2*a02*a20 - 2*a02*a22 + a20^2 + 2*a20*a22 + a22^2,
	a00^2 + 2*a00*a02 + 2*a00*a20 - 2*a00*a22 + a02^2 - 2*a02*a20 + 2*a02*a22 + a20^2 + 2*a20*a22 + a22^2,
	a00^4 - 4*a00^3*a22 + 2*a00^2*a02^2 + 12*a00^2*a02*a20 + 2*a00^2*a20^2 + 6*a00^2*a22^2 + 
	12*a00*a02^2*a22 + 8*a00*a02*a20*a22 + 12*a00*a20^2*a22 - 4*a00*a22^3 + a02^4 - 4*a02^3*a20 + 
	6*a02^2*a20^2 + 2*a02^2*a22^2 - 4*a02*a20^3 + 12*a02*a20*a22^2 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 + 4*a00^3*a22 + 2*a00^2*a02^2 - 12*a00^2*a02*a20 + 2*a00^2*a20^2 + 6*a00^2*a22^2 - 
	12*a00*a02^2*a22 + 8*a00*a02*a20*a22 - 12*a00*a20^2*a22 + 4*a00*a22^3 + a02^4 + 4*a02^3*a20 + 
	6*a02^2*a20^2 + 2*a02^2*a22^2 + 4*a02*a20^3 - 12*a02*a20*a22^2 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 - 4*a00^3*a02 + 6*a00^2*a02^2 + 2*a00^2*a20^2 + 12*a00^2*a20*a22 + 2*a00^2*a22^2 - 4*a00*a02^3 + 
	12*a00*a02*a20^2 + 8*a00*a02*a20*a22 + 12*a00*a02*a22^2 + a02^4 + 2*a02^2*a20^2 + 12*a02^2*a20*a22 +
	2*a02^2*a22^2 + a20^4 - 4*a20^3*a22 + 6*a20^2*a22^2 - 4*a20*a22^3 + a22^4,
	a00^4 + 4*a00^3*a02 + 6*a00^2*a02^2 + 2*a00^2*a20^2 - 12*a00^2*a20*a22 + 2*a00^2*a22^2 + 4*a00*a02^3 - 
	12*a00*a02*a20^2 + 8*a00*a02*a20*a22 - 12*a00*a02*a22^2 + a02^4 + 2*a02^2*a20^2 - 12*a02^2*a20*a22 +
	2*a02^2*a22^2 + a20^4 + 4*a20^3*a22 + 6*a20^2*a22^2 + 4*a20*a22^3 + a22^4,
	4*a00^2*a02^2 + a20^4 - 2*a20^2*a22^2 + a22^4,
	a00^4 - 2*a00^2*a02^2 + a02^4 + 4*a20^2*a22^2,
	a00^4 - 4*a00^3*a20 + 2*a00^2*a02^2 - 12*a00^2*a02*a22 + 6*a00^2*a20^2 + 2*a00^2*a22^2 + 
	12*a00*a02^2*a20 - 8*a00*a02*a20*a22 - 4*a00*a20^3 + 12*a00*a20*a22^2 + a02^4 + 4*a02^3*a22 + 
	2*a02^2*a20^2 + 6*a02^2*a22^2 - 12*a02*a20^2*a22 + 4*a02*a22^3 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 + 4*a00^3*a20 + 2*a00^2*a02^2 + 12*a00^2*a02*a22 + 6*a00^2*a20^2 + 2*a00^2*a22^2 - 
	12*a00*a02^2*a20 - 8*a00*a02*a20*a22 + 4*a00*a20^3 - 12*a00*a20*a22^2 + a02^4 - 4*a02^3*a22 + 
	2*a02^2*a20^2 + 6*a02^2*a22^2 + 12*a02*a20^2*a22 - 4*a02*a22^3 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 - 4*a00^3*a02 + 6*a00^2*a02^2 + 2*a00^2*a20^2 - 12*a00^2*a20*a22 + 2*a00^2*a22^2 - 4*a00*a02^3 + 
	12*a00*a02*a20^2 - 8*a00*a02*a20*a22 + 12*a00*a02*a22^2 + a02^4 + 2*a02^2*a20^2 - 12*a02^2*a20*a22 +
	2*a02^2*a22^2 + a20^4 + 4*a20^3*a22 + 6*a20^2*a22^2 + 4*a20*a22^3 + a22^4,
	a00^4 + 4*a00^3*a02 + 6*a00^2*a02^2 + 2*a00^2*a20^2 + 12*a00^2*a20*a22 + 2*a00^2*a22^2 + 4*a00*a02^3 - 
	12*a00*a02*a20^2 - 8*a00*a02*a20*a22 - 12*a00*a02*a22^2 + a02^4 + 2*a02^2*a20^2 + 12*a02^2*a20*a22 +
	2*a02^2*a22^2 + a20^4 - 4*a20^3*a22 + 6*a20^2*a22^2 - 4*a20*a22^3 + a22^4,
	a00^4 - 4*a00^3*a22 + 2*a00^2*a02^2 - 12*a00^2*a02*a20 + 2*a00^2*a20^2 + 6*a00^2*a22^2 + 
	12*a00*a02^2*a22 - 8*a00*a02*a20*a22 + 12*a00*a20^2*a22 - 4*a00*a22^3 + a02^4 + 4*a02^3*a20 + 
	6*a02^2*a20^2 + 2*a02^2*a22^2 + 4*a02*a20^3 - 12*a02*a20*a22^2 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 + 4*a00^3*a22 + 2*a00^2*a02^2 + 12*a00^2*a02*a20 + 2*a00^2*a20^2 + 6*a00^2*a22^2 - 
	12*a00*a02^2*a22 - 8*a00*a02*a20*a22 - 12*a00*a20^2*a22 + 4*a00*a22^3 + a02^4 - 4*a02^3*a20 + 
	6*a02^2*a20^2 + 2*a02^2*a22^2 - 4*a02*a20^3 + 12*a02*a20*a22^2 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 - 4*a00^3*a20 + 2*a00^2*a02^2 + 12*a00^2*a02*a22 + 6*a00^2*a20^2 + 2*a00^2*a22^2 + 
	12*a00*a02^2*a20 + 8*a00*a02*a20*a22 - 4*a00*a20^3 + 12*a00*a20*a22^2 + a02^4 - 4*a02^3*a22 + 
	2*a02^2*a20^2 + 6*a02^2*a22^2 + 12*a02*a20^2*a22 - 4*a02*a22^3 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^4 + 4*a00^3*a20 + 2*a00^2*a02^2 - 12*a00^2*a02*a22 + 6*a00^2*a20^2 + 2*a00^2*a22^2 - 
	12*a00*a02^2*a20 + 8*a00*a02*a20*a22 + 4*a00*a20^3 - 12*a00*a20*a22^2 + a02^4 + 4*a02^3*a22 + 
	2*a02^2*a20^2 + 6*a02^2*a22^2 - 12*a02*a20^2*a22 + 4*a02*a22^3 + a20^4 + 2*a20^2*a22^2 + a22^4,
	a00^2 - a02^2 - a20^2 - a22^2,
	a00^2 - a02^2 + a20^2 + a22^2,
	a00^2 + a02^2 - a20^2 + a22^2,
	a00^2 + a02^2 + a20^2 - a22^2,
	a00^2 - 2*a00*a02 - 2*a00*a20 + 2*a00*a22 + a02^2 - 2*a02*a20 + 2*a02*a22 + a20^2 + 2*a20*a22 + a22^2,
	a00^2 - 2*a00*a02 + 2*a00*a20 - 2*a00*a22 + a02^2 + 2*a02*a20 - 2*a02*a22 + a20^2 + 2*a20*a22 + a22^2,
	a00^2 + 2*a00*a02 - 2*a00*a20 - 2*a00*a22 + a02^2 + 2*a02*a20 + 2*a02*a22 + a20^2 - 2*a20*a22 + a22^2,
	a00^2 + 2*a00*a02 + 2*a00*a20 + 2*a00*a22 + a02^2 - 2*a02*a20 - 2*a02*a22 + a20^2 - 2*a20*a22 + a22^2,
	2*a00*a22 - a02^2 - a20^2,
	2*a00*a22 + a02^2 + a20^2,
	a00^2 - 2*a02*a20 + a22^2,
	a00^2 + 2*a02*a20 + a22^2,
	4*a00^2*a22^2 + a02^4 - 2*a02^2*a20^2 + a20^4,
	a00^4 - 2*a00^2*a22^2 + 4*a02^2*a20^2 + a22^4
	@};
end function;    
